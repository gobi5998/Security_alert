import 'package:hive/hive.dart';
part 'malware_report_model.g.dart';

@HiveType(typeId: 2)
class MalwareReportModel extends HiveObject {
  @HiveField(0)
  String id;

  @HiveField(1)
  String malwareType;

  @HiveField(2)
  String infectedDeviceType;

  @HiveField(3)
  String operatingSystem;

  @HiveField(4)
  String detectionMethod;

  @HiveField(5)
  String location;

  @HiveField(6)
  String fileName;

  @HiveField(7)
  String name;

  @HiveField(8)
  String systemAffected;

  @HiveField(9)
  String alertSeverityLevel;

  @HiveField(10)
  DateTime date;

  @HiveField(11)
  bool isSynced;

  @HiveField(12)
  List<String> screenshotPaths;

  @HiveField(13)
  List<String> documentPaths;

  @HiveField(14)
  List<String> voicePaths;

  MalwareReportModel({
    required this.id,
    required this.malwareType,
    required this.infectedDeviceType,
    required this.operatingSystem,
    required this.detectionMethod,
    required this.location,
    required this.fileName,
    required this.name,
    required this.systemAffected,
    required this.alertSeverityLevel,
    required this.date,
    this.isSynced = false,
    this.screenshotPaths = const [],
    this.documentPaths = const [],
    this.voicePaths =const[],
  });

  Map<String, dynamic> toJson() => {
    'id': id,
    'malwareType': malwareType,
    'infectedDeviceType': infectedDeviceType,
    'operatingSystem': operatingSystem,
    'detectionMethod': detectionMethod,
    'location': location,
    'fileName': fileName,
    'name': name,
    'systemAffected': systemAffected,
    'alertSeverityLevel': alertSeverityLevel,
    'date': date.toIso8601String(),
    'isSynced': isSynced,
    'screenshotPaths': screenshotPaths,
    'documentPaths': documentPaths,
    'voicePaths':voicePaths,
  };

  static MalwareReportModel fromJson(Map<String, dynamic> json) => MalwareReportModel(
    id: json['id'] as String,
    malwareType: json['malwareType'] as String,
    infectedDeviceType: json['infectedDeviceType'] as String,
    operatingSystem: json['operatingSystem'] as String,
    detectionMethod: json['detectionMethod'] as String,
    location: json['location'] as String,
    fileName: json['fileName'] as String,
    name: json['name'] as String,
    systemAffected: json['systemAffected'] as String,
    alertSeverityLevel: json['alertSeverityLevel'] as String,
    date: DateTime.parse(json['date'] as String),
    isSynced: json['isSynced'] as bool? ?? false,
    screenshotPaths: (json['screenshotPaths'] as List<dynamic>?)?.map((e) => e as String).toList() ?? [],
    documentPaths: (json['documentPaths'] as List<dynamic>?)?.map((e) => e as String).toList() ?? [],
    voicePaths: (json['voicePaths'] as List<dynamic>?)?.map((e) => e as String).toList() ?? [],
  );
} 