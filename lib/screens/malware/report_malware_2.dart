// // malware_report_page.dart
// import 'package:file_picker/file_picker.dart';
// import 'package:flutter/material.dart';
// import 'package:security_alert/custom/CustomDropdown.dart';
// import 'package:security_alert/custom/fileUpload.dart';
// import '../../custom/Success_page.dart';
// import '../../custom/customButton.dart';
// import '../../custom/customTextfield.dart';
// import '../../models/malware_report_model.dart';
// import 'malware_report_service.dart';

// class MalwareReportPage2 extends StatefulWidget {
//   final MalwareReportModel report;
//   const MalwareReportPage2({super.key, required this.report});

//   @override
//   State<MalwareReportPage2> createState() => _MalwareReportPageState();
// }

// class _MalwareReportPageState extends State<MalwareReportPage2> {
//   PlatformFile? selectedFile;
//   final _formKey = GlobalKey<FormState>();

//   final TextEditingController _nameController = TextEditingController();
//   final TextEditingController _systemAffectedController =
//       TextEditingController();
//   String? _selectedSeverity;

//   void pickFile() async {
//     final result = await FilePicker.platform.pickFiles(
//       type: FileType.custom,
//       allowedExtensions: ['zip', 'jpg', 'jpeg', 'png'],
//       withData: true,
//     );

//     if (result != null) {
//       final file = result.files.first;
//       if (file.size > 10 * 1024 * 1024) {
//         ScaffoldMessenger.of(
//           context,
//         ).showSnackBar(const SnackBar(content: Text('File size exceeds 10MB')));
//         return;
//       }
//       setState(() {
//         selectedFile = file;
//       });
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     try {
//       return Scaffold(
//         appBar: AppBar(title: const Text('Report Malware')),
//         body: LayoutBuilder(
//           builder: (context, constraints) {
//             return SingleChildScrollView(
//               padding: const EdgeInsets.all(16),
//               child: ConstrainedBox(
//                 constraints: BoxConstraints(minHeight: constraints.maxHeight),
//                 child: Form(
//                   key: _formKey,
//                   child: Column(
//                     crossAxisAlignment: CrossAxisAlignment.start,
//                     children: [
//                       const Text(
//                         "Upload infected files (zip, jpg, jpeg, png)",
//                         style: TextStyle(fontWeight: FontWeight.bold),
//                       ),
//                       const SizedBox(height: 8),
//                       GestureDetector(
//                         onTap: pickFile,
//                         child: Container(
//                           decoration: BoxDecoration(
//                             border: Border.all(color: Colors.grey),
//                             borderRadius: BorderRadius.circular(8),
//                             color: const Color(0xFFEFEFEF),
//                           ),
//                           padding: const EdgeInsets.all(16),
//                           child: Row(
//                             children: [
//                               const Icon(Icons.add, size: 32),
//                               const SizedBox(width: 12),
//                               Column(
//                                 crossAxisAlignment: CrossAxisAlignment.start,
//                                 children: [
//                                   const Text(
//                                     "Upload Files",
//                                     style: TextStyle(
//                                       fontWeight: FontWeight.bold,
//                                     ),
//                                   ),
//                                   Text(
//                                     "Limit: 10mb | zip, jpg, jpeg, png",
//                                     style: TextStyle(
//                                       fontSize: 12,
//                                       color: Colors.redAccent,
//                                     ),
//                                   ),
//                                   const Text(
//                                     "Upload only non-sensitive suspected-infected files or screenshots",
//                                     style: TextStyle(
//                                       fontSize: 9,
//                                       color: Colors.grey,
//                                     ),
//                                   ),
//                                 ],
//                               ),
//                             ],
//                           ),
//                         ),
//                       ),
//                       const SizedBox(height: 16),
//                       // Temporarily comment out FileUploadWidget to test if it's causing the issue
//                       // FileUploadWidget(
//                       //   reportId: '123',
//                       //   onFilesUploaded: (List<Map<String, dynamic>> files) {
//                       //     // Handle uploaded files
//                       //   },
//                       // ),
//                       if (selectedFile != null)
//                         Padding(
//                           padding: const EdgeInsets.only(top: 8.0),
//                           child: Text(
//                             "Selected: ${selectedFile!.name}",
//                             style: const TextStyle(fontSize: 12),
//                           ),
//                         ),
//                       const SizedBox(height: 24),

//                       const Text(
//                         "Report malware attack details",
//                         style: TextStyle(fontWeight: FontWeight.bold),
//                       ),
//                       const SizedBox(height: 16),

//                       // const Text(
//                       //   "Name",
//                       //   style: TextStyle(fontSize: 14, fontFamily: 'Nunito', fontWeight: FontWeight.bold),
//                       // ),
//                       CustomTextField(
//                         controller: _nameController,
//                         hintText: "Enter name",
//                         label: 'Name',
//                         validator: (val) =>
//                             val == null || val.isEmpty ? 'Required' : null,
//                       ),
//                       const SizedBox(height: 16),

//                       // const Text(
//                       //   "System Affected",
//                       //   style: TextStyle(fontSize: 14, fontFamily: 'Nunito', fontWeight: FontWeight.bold),
//                       // ),
//                       CustomTextField(
//                         controller: _systemAffectedController,
//                         hintText: "Enter system name",
//                         label: 'System Affected',
//                         validator: (val) =>
//                             val == null || val.isEmpty ? 'Required' : null,
//                       ),
//                       const SizedBox(height: 16),

//                       CustomDropdown(
//                         hint: "Select Severity Level",
//                         value: _selectedSeverity,
//                         items: const ['High', 'Medium', 'Low'],
//                         onChanged: (val) =>
//                             setState(() => _selectedSeverity = val),
//                         label: 'Alert Severity Levels',
//                       ),

//                       const SizedBox(height: 24),
//                       CustomButton(
//                         text: 'Submit',
//                         onPressed: () async {
//                           // Validate required fields
//                           if (_nameController.text.isEmpty ||
//                               _systemAffectedController.text.isEmpty ||
//                               _selectedSeverity == null) {
//                             ScaffoldMessenger.of(context).showSnackBar(
//                               const SnackBar(
//                                 content: Text(
//                                   'Please fill all required fields',
//                                 ),
//                               ),
//                             );
//                             return;
//                           }

//                           try {
//                             // Update the report with final data
//                             final updatedReport = widget.report.copyWith(
//                               name: _nameController.text,
//                               systemAffected: _systemAffectedController.text,
//                               alertSeverityLevel: _selectedSeverity!,
//                               fileName: selectedFile?.name ?? '',
//                             );

//                             // Save the report with auto-sync
//                             await MalwareReportService.saveReport(
//                               updatedReport,
//                             );

//                             print(
//                               'âœ… Malware report saved and duplicates cleaned up',
//                             );

//                             // Navigate to success page
//                             if (mounted) {
//                               Navigator.pushAndRemoveUntil(
//                                 context,
//                                 MaterialPageRoute(
//                                   builder: (context) => const ReportSuccess(
//                                     label: 'Malware Report',
//                                   ),
//                                 ),
//                                 (route) => false,
//                               );
//                             }
//                           } catch (e) {
//                             print('Error saving malware report: $e');
//                             ScaffoldMessenger.of(context).showSnackBar(
//                               SnackBar(
//                                 content: Text('Error saving report: $e'),
//                               ),
//                             );
//                           }
//                         },
//                         fontSize: 20,
//                         borderCircular: 6,
//                         fontWeight: FontWeight.bold,
//                       ),

//                       // ElevatedButton(
//                       //   onPressed: () => Navigator.push(
//                       //     context,
//                       //     MaterialPageRoute(
//                       //       builder: (_) => const ReportSuccess(label: 'Malware Report'),
//                       //     ),
//                       //   ),
//                       //   style: ElevatedButton.styleFrom(
//                       //     backgroundColor: const Color(0xFF064FAD),
//                       //     minimumSize: const Size(double.infinity, 48),
//                       //     shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
//                       //   ),
//                       //   child: const Text("Submit", style: TextStyle(color: Colors.white)),
//                       // ),
//                     ],
//                   ),
//                 ),
//               ),
//             );
//           },
//         ),
//       );
//     } catch (e) {
//       print('Error building MalwareReportPage2: $e');
//       return Scaffold(
//         appBar: AppBar(title: const Text('Error')),
//         body: Center(child: Text('Error loading Malware Report Page: $e')),
//       );
//     }
//   }
// }



// malware_report_page.dart
import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
import 'package:security_alert/custom/CustomDropdown.dart';
import '../../custom/Success_page.dart';
import '../../custom/customButton.dart';
import '../../custom/customTextfield.dart';
import '../../models/malware_report_model.dart';
import '../../custom/fileUpload.dart';
import 'malware_report_service.dart';

class MalwareReportPage2 extends StatefulWidget {
  final MalwareReportModel report;
  const MalwareReportPage2({super.key, required this.report});

  @override
  State<MalwareReportPage2> createState() => _MalwareReportPageState();
}

class _MalwareReportPageState extends State<MalwareReportPage2> {
  PlatformFile? selectedFile;
  final _formKey = GlobalKey<FormState>();
  final GlobalKey<FileUploadWidgetState> _fileUploadKey = GlobalKey<FileUploadWidgetState>();


  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _systemAffectedController =
      TextEditingController();
  String? _selectedSeverity;


  void pickFile() async {
    final result = await FilePicker.platform.pickFiles(
      type: FileType.custom,
      allowedExtensions: ['exe', 'zip', 'jpg', 'jpeg', 'png'],
      withData: true,
    );

    if (result != null) {
      final file = result.files.first;
      if (file.size > 10 * 1024 * 1024) {
        ScaffoldMessenger.of(
          context,
        ).showSnackBar(const SnackBar(content: Text('File size exceeds 10MB')));
        return;
      }
      setState(() {
        selectedFile = file;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Report Malware')),
      body: LayoutBuilder(
        builder: (context, constraints) {
          return SingleChildScrollView(
            padding: const EdgeInsets.all(16),
            child: ConstrainedBox(
              constraints: BoxConstraints(minHeight: constraints.maxHeight),
              child: Form(
                key: _formKey,
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      "Upload infected",
                      style: TextStyle(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 8),
                    FileUploadWidget(
                      key: _fileUploadKey,
                      reportId: widget.report.id ?? '123',
                      autoUpload: true,
                      onFilesUploaded: (List<Map<String, dynamic>> uploadedFiles) {
                        // Handle uploaded files
                        print('Files uploaded: ${uploadedFiles.length}');
                      },
                    ),
                    // GestureDetector(
                    //   onTap: pickFile,
                    //   child: Container(
                    //     decoration: BoxDecoration(
                    //       border: Border.all(color: Colors.grey),
                    //       borderRadius: BorderRadius.circular(8),
                    //       color: const Color(0xFFEFEFEF),
                    //     ),
                    //     padding: const EdgeInsets.all(16),
                    //     child: Row(
                    //       children: [
                    //         // const Icon(Icons.add, size: 32),
                    //         // const SizedBox(width: 12),
                    //         // Column(
                    //         //   crossAxisAlignment: CrossAxisAlignment.start,
                    //         //   children: [
                    //         //     const Text(
                    //         //       "Upload Files",
                    //         //       style: TextStyle(fontWeight: FontWeight.bold),
                    //         //     ),
                    //         //     Text(
                    //         //       "Limit: 10mb | exe, zip, jpg, jpeg, png",
                    //         //       style: TextStyle(
                    //         //         fontSize: 12,
                    //         //         color: Colors.redAccent,
                    //         //       ),
                    //         //     ),
                    //         //     const Text(
                    //         //       "Upload only non-sensitive suspected-infected files or screenshots",
                    //         //       style: TextStyle(
                    //         //         fontSize: 9,
                    //         //         color: Colors.grey,
                    //         //       ),
                    //         //     ),
                    //         //   ],
                    //         // ),
                    //       ],
                    //     ),
                    //   ),
                    // ),
                    // if (selectedFile != null)
                    //   Padding(
                    //     padding: const EdgeInsets.only(top: 8.0),
                    //     child: Text(
                    //       "Selected: ${selectedFile!.name}",
                    //       style: const TextStyle(fontSize: 12),
                    //     ),
                    //   ),
                    const SizedBox(height: 24),

                    const Text(
                      "Report malware attack details",
                      style: TextStyle(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 16),

                    // const Text(
                    //   "Name",
                    //   style: TextStyle(fontSize: 14, fontFamily: 'Nunito', fontWeight: FontWeight.bold),
                    // ),
                    CustomTextField(
                      controller: _nameController,
                      hintText: "Enter name",
                      label: 'Name',
                      validator: (val) =>
                          val == null || val.isEmpty ? 'Required' : null,
                    ),
                    const SizedBox(height: 16),

                    // const Text(
                    //   "System Affected",
                    //   style: TextStyle(fontSize: 14, fontFamily: 'Nunito', fontWeight: FontWeight.bold),
                    // ),
                    CustomTextField(
                      controller: _systemAffectedController,
                      hintText: "Enter system name",
                      label: 'System Affected',
                      validator: (val) =>
                          val == null || val.isEmpty ? 'Required' : null,
                    ),
                    const SizedBox(height: 16),

                    CustomDropdown(
                      hint: "Select Severity Level",
                      value: _selectedSeverity,
                      items: const ['High', 'Medium', 'Low'],
                      onChanged: (val) =>
                          setState(() => _selectedSeverity = val),
                      label: 'Alert Severity Levels',
                    ),

                    const SizedBox(height: 24),
                    CustomButton(
                      text: 'Submit',
                      onPressed: () async {
                        // Validate required fields
                        if (_nameController.text.isEmpty ||
                            _systemAffectedController.text.isEmpty ||
                            _selectedSeverity == null) {
                          ScaffoldMessenger.of(context).showSnackBar(
                            const SnackBar(
                              content: Text('Please fill all required fields'),
                            ),
                          );
                          return;
                        }

                        try {
                          // Upload files first
                          List<Map<String, dynamic>> uploadedFiles = [];
                          if (_fileUploadKey.currentState != null) {
                            uploadedFiles = await _fileUploadKey.currentState!.triggerUpload();
                          }

                          // Update the report with final data
                          final updatedReport = widget.report.copyWith(
                            name: _nameController.text,
                            systemAffected: _systemAffectedController.text,
                            alertSeverityLevel: _selectedSeverity!,
                            fileName: selectedFile?.name ?? '',
                          );

                          // Save the report with auto-sync
                          await MalwareReportService.saveReport(updatedReport);

                          print(
                            'âœ… Malware report saved and duplicates cleaned up',
                          );

                          // Navigate to success page
                          if (mounted) {
                            Navigator.pushAndRemoveUntil(
                              context,
                              MaterialPageRoute(
                                builder: (context) => const ReportSuccess(
                                  label: 'Malware Report',
                                ),
                              ),
                              (route) => false,
                            );
                          }
                        } catch (e) {
                          print('Error saving malware report: $e');
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(content: Text('Error saving report: $e')),
                          );
                        }
                      },
                      fontSize: 20,
                      borderCircular: 6,
                      fontWeight: FontWeight.bold,
                    ),

                    // ElevatedButton(
                    //   onPressed: () => Navigator.push(
                    //     context,
                    //     MaterialPageRoute(
                    //       builder: (_) => const ReportSuccess(label: 'Malware Report'),
                    //     ),
                    //   ),
                    //   style: ElevatedButton.styleFrom(
                    //     backgroundColor: const Color(0xFF064FAD),
                    //     minimumSize: const Size(double.infinity, 48),
                    //     shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(8)),
                    //   ),
                    //   child: const Text("Submit", style: TextStyle(color: Colors.white)),
                    // ),
                  ],
                ),
              ),
            ),
          );
        },
      ),
    );
  }
}